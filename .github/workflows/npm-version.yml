name: Package version patch

on:
  pull_request:
    branches:
      - CI
    types:
      - closed

env:
  sourcePackageVersion: ${{github.head_ref}}
  targetPackageVersion: ${{github.base_ref}}

jobs:
  title-checker:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      npmVersionFlag: ${{ steps.version_flag.outputs.npm_version_flag }}
    steps:
      - uses: actions/checkout@v4
      - uses: dkershner6/get-pull-request-action@v1
        id: get_pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Script for version
        id: version_flag
        run: . .github/scripts/check_title_pr.sh
        env:
          pr_title: "${{ fromJSON(steps.get_pr.outputs.pr).title }}"

  up_version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: title-checker
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm ci
    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    - name: Generate Tag
      run: |
        npm version ${{ needs.title-checker.outputs.npmVersionFlag }}
    - name: add new version Package.json
      run: |
        git add package.json && git commit -m "up package version"          
    - name: Push Tag
      run: |
        git push origin ${{ env.targetPackageVersion }} --tags
        